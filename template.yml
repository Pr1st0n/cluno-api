AWSTemplateFormatVersion: 2010-09-09
Description: >-
  cluno-api
Transform:
- AWS::Serverless-2016-10-31
Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: build/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the OffersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref OffersTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          DYNAMODB_TABLE: !Ref OffersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /offers/
            Method: GET
  # This is a Lambda function config associated with the source code: get-by-id.js
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: build/handlers/get-by-id.getByIdHandler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by id from a DynamoDB table.
      Policies:
        # Give Create/Read/Update/Delete Permissions to the OffersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref OffersTable
      Environment:
        Variables:
          # Make table name accessible as environment variable from function code during execution
          DYNAMODB_TABLE: !Ref OffersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /offers/{id}
            Method: GET
  # DynamoDB table to store Offers
  OffersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName : cluno-api-offers
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
